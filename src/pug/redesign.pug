mixin translate(options)
  - options.html = options.html || {};
  span.translation&attributes(options.html)
    if options.prepend
      span(class="translation__prepend")=options.prepend
    if options.image
      img(class="translation__image" src=`${imgServer}${options.image}` alt=options.key)
    else if options.key
      span(class="translation__key" data-i18n=options.key)
    if options.append
      span(class="translation__append")=options.append

mixin rangebar(options)
  - options.html = options.html || {};
  .rangebar&attributes(options.html)
    label
      if options.label 
        +translate(options.label)
      if options.steps && options.name
        .rangebar__steps
            each _, i in Array(options.steps)
              - const step = options.steps - i;
              input(type='checkbox' name=`attr_${options.name}` value=step)

mixin text-input(options)
  - options.html = options.html || {};
  .text-input.labelled&attributes(options.html)
    - delete options.html;
    label
      if options.label 
        +translate(options.label)
      if options.name
        input(type='text' name=`attr_${options.name}`)

mixin number-input(options)
  - options.html = options.html || {};
  .number-input.labelled&attributes(options.html)
    - delete options.html;
    label
      if options.label 
        +translate(options.label)
      if options.name
        input(type='number' name=`attr_${options.name}`)

.sheet__container
  .card.card--header
  .card.card--health-conditions
    .section.section--health
      h2
        +translate({key:'health'})
      each bar in spine.health.bars
        -
          const barProperties = {
            name: bar.name,
            steps: bar.steps,
            label: { key: bar.name },
          };
          if(Array.isArray(bar.values)) barProperties.label.append = ` (${bar.values.join('/')})`;
        +rangebar(barProperties)
    .section.section--conditions
      .table.table--conditions
        .table__header
          h3
            +translate({key:'conditions'})
          h3
            +translate({key:'treatment'})
        .table__body
          each _, i in Array(spine.conditions.numberOfConditions)
            - row = i + 1;
            .table__row
              +text-input({name:`condition-${row}`, html:{class:'text-input--simple'}})
              +text-input({name:`treatment-${row}`, html:{class:'text-input--simple'}})
  .card.card--resolve
    .section.section--resolve
      h3
        +translate({key:'resolve'})
      each attribute in spine.resolve.attributes
        +number-input({name:attribute, label:{key:attribute}, html:{class:'number-input--simple'}})
  .card.card--evasion-armor
    .section.section--evasion
      h3
        +translate({key:'evasion'})
      .group.group--evasion
        +number-input({name:'evasion-score', label:{key:'score'}, html:{class:'number-input--simple number-input--align-center labelled--bottom-center'}})
        .group__separator /
        +number-input({name:'evasion-average', label:{key:'average'}, html:{class:'number-input--simple number-input--align-center labelled--bottom-center'}})
    .section.section--armor
      h3
        +translate({key:'armor'})
      +number-input({name:'armor', label:{image:'/kXrkprDN/shield.png', key:'armor'}, html:{class:'number-input--simple number-input--align-center'}})
      +number-input({name:'armor-empty', label:{image:'/fbhyzqHY/shield-empty.png', key:'armor-empty'}, html:{class:'number-input--simple number-input--align-center'}})
  .card.card--abilities-skills
    .section.section--abilities-skills
      h3
        +translate({key:'abilities-and-skills'})
      .group.group--abilities-skills
        each attributes, group in spine.abilitiesAndSkills
          .group(class=`group--${group}`)
            h2
              +translate({key:group})
            each skills, attribute in attributes
              .group(class=`group--${attribute}`)
                +number-input({name:attribute, label:{key:attribute}, html:{class:'number-input--boxed'}})
                each skill in skills
                  +number-input({name:skill, label:{key:skill}, html:{class:'number-input--simple  number-input--align-center'}})
  .card.card--knowledge
    .section.section--knowledge
      .group.group--title
        h3
          +translate({key:'abilities-and-skills'})
        each skills, attribute in spine.knowledge
          +number-input({name:attribute, label:{key:attribute}, html:{class:'number-input--boxed'}})
      each skills, attribute in spine.knowledge
        .group(class=`group--${attribute}`)
          each skill in skills
            +number-input({name:skill, label:{key:skill}, html:{class:'number-input--simple number-input--align-center'}})
  .card.card--magic
  .card.card--weapons-armor-ammunition-unarmed
  .card.card--traits-powers-spells
  